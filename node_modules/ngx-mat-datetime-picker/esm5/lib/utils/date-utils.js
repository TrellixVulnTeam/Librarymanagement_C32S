export var LIMIT_TIMES = {
    minHour: 0,
    maxHour: 24,
    minMinute: 0,
    maxMinute: 60,
    minSecond: 0,
    maxSecond: 60,
    meridian: 12
};
export var MERIDIANS = {
    AM: 'AM',
    PM: 'PM'
};
export var DEFAULT_STEP = 1;
export var DEFAULT_HOUR_PLACEHOLDER = '';
export var DEFAULT_MINUTE_PLACEHOLDER = '';
export var DEFAULT_SECOND_PLACEHOLDER = '';
export var NUMERIC_REGEX = /[^0-9]/g;
export var PATTERN_INPUT_HOUR = /^(2[0-3]|[0-1][0-9]|[0-9])$/;
export var PATTERN_INPUT_MINUTE = /^([0-5][0-9]|[0-9])$/;
export var PATTERN_INPUT_SECOND = /^([0-5][0-9]|[0-9])$/;
export function formatTwoDigitTimeValue(val) {
    var txt = val.toString();
    return txt.length > 1 ? txt : "0" + txt;
}
export function createMissingDateImplError(provider) {
    return Error("MatDatepicker: No provider found for " + provider + ". You must import one of the following " +
        "modules at your application root: NgxMatNativeDateModule, NgxMatMomentModule, or provide a " +
        "custom implementation.");
}
/** Formats a range of years. */
export function formatYearRange(start, end) {
    return start + " \u2013 " + end;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1tYXQtZGF0ZXRpbWUtcGlja2VyLyIsInNvdXJjZXMiOlsibGliL3V0aWxzL2RhdGUtdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHO0lBQ3ZCLE9BQU8sRUFBRSxDQUFDO0lBQ1YsT0FBTyxFQUFFLEVBQUU7SUFDWCxTQUFTLEVBQUUsQ0FBQztJQUNaLFNBQVMsRUFBRSxFQUFFO0lBQ2IsU0FBUyxFQUFFLENBQUM7SUFDWixTQUFTLEVBQUUsRUFBRTtJQUNiLFFBQVEsRUFBRSxFQUFFO0NBQ2YsQ0FBQTtBQUVELE1BQU0sQ0FBQyxJQUFNLFNBQVMsR0FBRztJQUNyQixFQUFFLEVBQUUsSUFBSTtJQUNSLEVBQUUsRUFBRSxJQUFJO0NBQ1gsQ0FBQTtBQUVELE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBRyxDQUFDLENBQUM7QUFDOUIsTUFBTSxDQUFDLElBQU0sd0JBQXdCLEdBQUcsRUFBRSxDQUFDO0FBQzNDLE1BQU0sQ0FBQyxJQUFNLDBCQUEwQixHQUFHLEVBQUUsQ0FBQztBQUM3QyxNQUFNLENBQUMsSUFBTSwwQkFBMEIsR0FBRyxFQUFFLENBQUM7QUFDN0MsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQztBQUV2QyxNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRyw2QkFBNkIsQ0FBQztBQUNoRSxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxzQkFBc0IsQ0FBQztBQUMzRCxNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxzQkFBc0IsQ0FBQztBQUUzRCxNQUFNLFVBQVUsdUJBQXVCLENBQUMsR0FBVztJQUMvQyxJQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDM0IsT0FBTyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFJLEdBQUssQ0FBQztBQUM1QyxDQUFDO0FBRUQsTUFBTSxVQUFVLDBCQUEwQixDQUFDLFFBQWdCO0lBQ3ZELE9BQU8sS0FBSyxDQUNSLDBDQUF3QyxRQUFRLDRDQUF5QztRQUN6Riw2RkFBNkY7UUFDN0Ysd0JBQXdCLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBRUQsZ0NBQWdDO0FBQ2hDLE1BQU0sVUFBVSxlQUFlLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdEQsT0FBVSxLQUFLLGdCQUFXLEdBQUssQ0FBQztBQUNwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IExJTUlUX1RJTUVTID0ge1xyXG4gICAgbWluSG91cjogMCxcclxuICAgIG1heEhvdXI6IDI0LFxyXG4gICAgbWluTWludXRlOiAwLFxyXG4gICAgbWF4TWludXRlOiA2MCxcclxuICAgIG1pblNlY29uZDogMCxcclxuICAgIG1heFNlY29uZDogNjAsXHJcbiAgICBtZXJpZGlhbjogMTJcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IE1FUklESUFOUyA9IHtcclxuICAgIEFNOiAnQU0nLFxyXG4gICAgUE06ICdQTSdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfU1RFUCA9IDE7XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hPVVJfUExBQ0VIT0xERVIgPSAnJztcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfTUlOVVRFX1BMQUNFSE9MREVSID0gJyc7XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NFQ09ORF9QTEFDRUhPTERFUiA9ICcnO1xyXG5leHBvcnQgY29uc3QgTlVNRVJJQ19SRUdFWCA9IC9bXjAtOV0vZztcclxuXHJcbmV4cG9ydCBjb25zdCBQQVRURVJOX0lOUFVUX0hPVVIgPSAvXigyWzAtM118WzAtMV1bMC05XXxbMC05XSkkLztcclxuZXhwb3J0IGNvbnN0IFBBVFRFUk5fSU5QVVRfTUlOVVRFID0gL14oWzAtNV1bMC05XXxbMC05XSkkLztcclxuZXhwb3J0IGNvbnN0IFBBVFRFUk5fSU5QVVRfU0VDT05EID0gL14oWzAtNV1bMC05XXxbMC05XSkkLztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUd29EaWdpdFRpbWVWYWx1ZSh2YWw6IG51bWJlcikge1xyXG4gICAgY29uc3QgdHh0ID0gdmFsLnRvU3RyaW5nKCk7XHJcbiAgICByZXR1cm4gdHh0Lmxlbmd0aCA+IDEgPyB0eHQgOiBgMCR7dHh0fWA7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNaXNzaW5nRGF0ZUltcGxFcnJvcihwcm92aWRlcjogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gRXJyb3IoXHJcbiAgICAgICAgYE1hdERhdGVwaWNrZXI6IE5vIHByb3ZpZGVyIGZvdW5kIGZvciAke3Byb3ZpZGVyfS4gWW91IG11c3QgaW1wb3J0IG9uZSBvZiB0aGUgZm9sbG93aW5nIGAgK1xyXG4gICAgICAgIGBtb2R1bGVzIGF0IHlvdXIgYXBwbGljYXRpb24gcm9vdDogTmd4TWF0TmF0aXZlRGF0ZU1vZHVsZSwgTmd4TWF0TW9tZW50TW9kdWxlLCBvciBwcm92aWRlIGEgYCArXHJcbiAgICAgICAgYGN1c3RvbSBpbXBsZW1lbnRhdGlvbi5gKTtcclxufVxyXG5cclxuLyoqIEZvcm1hdHMgYSByYW5nZSBvZiB5ZWFycy4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFllYXJSYW5nZShzdGFydDogc3RyaW5nLCBlbmQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYCR7c3RhcnR9IFxcdTIwMTMgJHtlbmR9YDtcclxufVxyXG5cclxuIl19